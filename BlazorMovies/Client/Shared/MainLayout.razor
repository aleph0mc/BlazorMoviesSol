@inherits LayoutComponentBase

@inject NavigationManager navigationManager
@inject IJSRuntime js

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        <LoginLinks />
        @*<a href="http://blazor.net" target="_blank" class="ml-md-auto">About</a>*@
        <CultureSelector />
    </div>

    <div class="content px-4" style="margin-bottom: 20px">
        @Body
    </div>
</div>

@code {

    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }

    // If there are many cascading parameters to use it is better to define a class
    public class AppState
    {
        public string ColorClass { get; set; } = "navy";
        public string SizeClass { get; set; } = "45px";
    }

    //Then we instantiate the AppState class
    AppState appState = new AppState();

    protected async override Task OnInitializedAsync()
    {
        await js.InitializeInactivityTimer(DotNetObjectReference.Create(this));
        Console.WriteLine("Renew token timer started...");
    }

    [JSInvokable]
    public async Task Logout()
    {
        var authState = await AuthenticationState;
        if (authState.User.Identity.IsAuthenticated)
        {
            // Uncomment to activate automatic logout
            navigationManager.NavigateTo("logout");
        }
    }
}