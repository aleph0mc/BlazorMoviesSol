@using System.Globalization

@inject NavigationManager nm
@inject IJSRuntime js

<strong>Culture:</strong>
<select @bind="culture">
    @foreach (var item in cultures)
    {
        <option value="@item">@item.DisplayName</option>
    }
</select>

@code {

    [CascadingParameter] public AppMode AppMode { get; set; }

    private CultureInfo[] cultures = new[]
    {
        new CultureInfo("en-US"),
        new CultureInfo("it-IT"),
        new CultureInfo("es-ES"),
        new CultureInfo("ru-RU") //No resource file prouvided for Russian, default en-US will be used
    };

    private CultureInfo culture
    {
        //get => CultureInfo.CurrentCulture;
        // This uses the default UI culture defined in MayLayout.razor file
        get => CultureInfo.CurrentUICulture;
        set
        {
            switch (AppMode)
            {
                case AppMode.WebAssembly:
                    var jsInProcessRuntime = (IJSInProcessRuntime)js;
                    jsInProcessRuntime.InvokeVoid("setInLocalStorage", "culture", value.Name);

                    //Force to Reload the current Uri in order to apply the selcted culture
                    nm.NavigateTo(nm.Uri, forceLoad: true);
                    break;
                case AppMode.ServerSide:
                    var culture = value.Name;
                    var uri = new Uri(nm.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
                    var query = $"?culture={Uri.EscapeDataString(culture)}&redirectionURI={Uri.EscapeDataString(uri)}";
                    nm.NavigateTo($"/culture/SetCulture{query}", forceLoad: true);
                    break;
                default:
                    break;
            }

        }
    }
}