@page "/"
@page "/index"
@* Index can be accessed as http://localhost or http://localhost/index *@

@inject IMoviesRepository repo

@* Used for Localization *@ 
@inject IStringLocalizer<Resource> localizer

@*<AuthorizeView Roles="Admin">
    <Authorized>
        <p style="color: green;">User is authorized, @context.User.Identity.Name</p>
    </Authorized>
    <NotAuthorized>
        <p style="color: red;">User is NOT authorized</p>
    </NotAuthorized>
</AuthorizeView>*@

<div>
    <h3>@localizer["intheathers"]</h3>
    @*<MoviesListGen Movies="movies" />*@

    <MoviesList Movies="inTheaters" />
</div>

<div>
    <h3>@localizer["upcomingreleases"]</h3>
    @*<MoviesListGen Movies="movies" />*@

    <MoviesList Movies="upcomingReleases" />
</div>

@*<CustomTypeahead SearchMethod="SearchMethod">
    <ResultTemplate>
        @context
    </ResultTemplate>
</CustomTypeahead>*@

@code{

    private List<Movie> inTheaters;
    private List<Movie> upcomingReleases;

    protected async override Task OnInitializedAsync()
    {
        //From Repository service

        var ret = await repo.GetIndexPageDTO();
        inTheaters = ret.InTheaters;
        upcomingReleases = ret.UpcomingReleases;
    }

    //private async Task<IEnumerable<string>> SearchMethod(string searchText)
    //{
    //    await Task.Delay(2000);

    //    if (searchText.Contains("test", StringComparison.OrdinalIgnoreCase))
    //        return Enumerable.Empty<string>();

    //    return new List<string> { "Milko", "Marco" };
}