@page "/test"
@*@using BlazorMovies.Client.Helpers <== no need to be here, find it in the _Imports.razor file  *@

<p>Hello, @name.ToUpper()</p>
<p>Hello, @CustomToUpper(name) &lt;== Using a function</p>
<p>Let's add 2 + 2 = @(2 + 2) &lt;== Using an explicit razor expression in round brackets @@(2 + 2) </p>

<p>An event on a button</p>
<button @onclick="@(() => Console.WriteLine("I've been clicked!"))">Click me</button>
<br />
<br />
<button @onclick="@WriteInLog">Click me</button>
<br />
<br />
@StringUtilitiesLocal.CustomToUpper(name) &lt;== ToUpper method from local class
<br />
<br />
@StringUtilities.CustomToUpper(name) &lt;== ToUpper method from Helpers class
<br />
<div>
    <h3>Movie</h3>
    @if (null == movies)
    {
        <img src="https://miro.medium.com/max/978/0*cWpsf9D3g346Va20.gif" />
    }
    else
    {
        @foreach (var movie in movies)
        {
            <p>Title: <b>@((MarkupString)movie.Title)</b></p>
            <p>Release Date: <b>@movie.ReleaseDate.Value.ToString("dd MMM yyyy")</b></p>
        }

        <p>Title: <b>@spiderman.Title</b></p>
        <p>Release Date: <b>@spiderman.ReleaseDate.Value.ToString("dd MMM yyyy")</b></p>
        <br />
        <h2>Delaied async</h2>
        @for (int i = 0; i < movies.Count; i++)
        {
            <div style="background-color: @(0 == i % 2 ? "blue" : "red")">
                <p>Title: <b>@movies[i].Title</b></p>
                <p>Release Date: <b>@movies[i].ReleaseDate.Value.ToString("dd MMM yyyy")</b></p>
            </div>
        }
    }
</div>

@code{
    string name = "Milko";

    string CustomToUpper(string value) => value.ToUpper();

    void WriteInLog()
    {
        Console.WriteLine("I've been clicked! (from method)");
    }

    public class StringUtilitiesLocal
    {
        public static string CustomToUpper(string value) => value.ToUpper();
    }

    Movie spiderman = new Movie
    {
        Title = "Spider-Man: Far From Home",
        ReleaseDate = new DateTime(2019, 7, 2)
    };

    List<Movie> movies;

    protected async override Task OnInitializedAsync()
    {
        await Task.Delay(3000);
        movies = new List<Movie>
{
            // we need to MarkupString cast (above) to show HTML tags
            new Movie {Title = "<b>Spider-Man: Far From Home<b>", ReleaseDate = new DateTime(2019, 7, 2)  },
            new Movie {Title = "<i>Moana</i>", ReleaseDate = new DateTime(2016, 11, 23)  },
            new Movie {Title = "Inception", ReleaseDate = new DateTime(2010, 7, 16)  }
        };
    }

}