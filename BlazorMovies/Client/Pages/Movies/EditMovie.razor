@page "/movies/edit/{MovieId:int}"

@inject IMoviesRepository mr
@inject NavigationManager nm
@* Only authorized users can access this component *@
@attribute [Authorize]

<h3>Edit Movie</h3>

@if (null != movie)
{
    <MovieForm Movie="movie" OnValidSubmit="Edit" SelectedGenres="@selectedGenres"
               NotSelectedGenres="@notSelectedGenres" SelectedActors="selectedActors" />

}

@code {

    [Parameter] public int MovieId { get; set; }
    private Movie movie;

    private List<Genre> notSelectedGenres;

    private List<Genre> selectedGenres;

    private List<Person> selectedActors;

    protected async override Task OnInitializedAsync()
    {
        var model = await mr.GetMovieForUpdate(MovieId);

        movie = model.Movie;
        selectedGenres = model.SelecgtedGenres;
        notSelectedGenres = model.NotselectedGenres;
        selectedActors = model.Actors;

        Console.WriteLine($"Character[0]: {model.Actors[0].Character}");
    }

    private async Task Edit()
    {
        Console.WriteLine("Updating movie...");

        try
        {
            await mr.UpdateMovie(movie);
            nm.NavigateTo($"movies/{MovieId.ToString()}");
        }
        catch (Exception ex)
        {

            //....
            Console.WriteLine(ex.Message);
        }
    }

}
